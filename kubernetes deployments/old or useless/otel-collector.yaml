# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetrycollector
  namespace: opentelemetry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentelemetrycollector
  template:
    metadata:
      labels:
        app: opentelemetrycollector
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      # This gateway container will receive traces and metrics from each microservice
      # and forward it to GCP
      - name: otel-gateway
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        args:
        - --config=/conf/collector-gateway-config.yaml
        image: otel/opentelemetry-collector-contrib:0.122.1@sha256:0076e6c250bef16968e29e8f94177b87b5a851c79ce14b270e657f5f655b9e04
        ports:
          - name: grpc-otlp
            containerPort: 4317
          - name: metrics
            containerPort: 8889
        volumeMounts:
        - name: collector-gateway-config
          mountPath: /conf
      volumes:
      - name: collector-gateway-config
        configMap:
          name: collector-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: opentelemetrycollector
  namespace: opentelemetry
  labels:
    app: opentelemetrycollector
spec:
  ports:
  - name: grpc-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: metrics
    port: 8889
    targetPort: 8889
  selector:
    app: opentelemetrycollector
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-gateway-config
  namespace: opentelemetry
# Open Telemetry Collector config
# https://opentelemetry.io/docs/collector/configuration/
data:
  collector-gateway-config.yaml: |
    receivers:
      otlp:
        protocols: 
          grpc:
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 5s
              static_configs:
                - targets:
                    - 'checkoutservice.avengers-capstone.svc.cluster.local:5050'
    processors:
    exporters:
      prometheus:
        endpoint: 0.0.0.0:8889
        namespace: otel-collector
    service:
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: []
          exporters: [prometheus] 